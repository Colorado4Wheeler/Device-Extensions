<?xml version="1.0"?>

<Devices>

	<!-- =========== HUE GROUP =========== -->
	<Device type="dimmer" id="hue-color-group">
		<Name>Virtual Color/Ambiant Hue Device Group</Name>
		<ConfigUI>
			<!-- Start Homebridge Buddy Integration Block -->		
			<Field type="checkbox" id="hbbIntegrated" defaultValue="false" hidden="false">
				<Label>Enable for HomeKit</Label>
				<Description>Integrate this device into Homebridge Buddy</Description>
				<CallbackMethod>hbbIntegrationFieldChange</CallbackMethod>
			</Field>
		
			<Field type="menu" id="hbbServer" defaultValue="1953136859" visibleBindingId="hbbIntegrated" visibleBindingValue="true" alwaysUseInDialogHeightCalc="true">
				<Label>Homebridge server:</Label>
				<List class="self" filter="" method="hbbIntegrationServerList" dynamicReload="true"/>
				<CallbackMethod>hbbIntegrationFieldChange</CallbackMethod>
			</Field>
			
			<Field type="menu" id="hbbTreatAs" defaultValue="none" visibleBindingId="hbbIntegrated" visibleBindingValue="true" alwaysUseInDialogHeightCalc="true">
				<Label>Homebridge device type:</Label>
				<List class="self" filter="" method="hbbIntegrationTreatAsList" dynamicReload="true"/>
				<CallbackMethod>hbbIntegrationFieldChange</CallbackMethod>
			</Field>
			
			<!-- not yet implemented in API but here for future proofing -->	
			<Field type="textfield" id="hbbAlias" defaultValue="" visibleBindingId="hbbIntegrated" visibleBindingValue="true" alwaysUseInDialogHeightCalc="true" hidden="true">
				<Label>Alias Name:</Label>
			</Field>
			
			<Field type="separator" id="sep_hbbConnector" visibleBindingId="hbbIntegrated" visibleBindingValue="true" alwaysUseInDialogHeightCalc="true"/>
			<!-- End Homebridge Buddy Integration Block -->
			
			<!-- Start Indigo Stock Dimmer Fields With RGB -->
			<Field id="address" type="textfield" hidden="true" />
			<Field id="nameOnHub" type="textfield" hidden="true" />
			<Field id="savedBrightness" type="textfield" hidden="true" />
			<Field id="modelId" type="textfield" hidden="true" />
			<Field id="manufacturerName" type="textfield" hidden="true" />
			<Field id="swVersion" type="textfield" hidden="true" />
			<Field id="type" type="textfield" hidden="true" />
			<Field id="uniqueId" type="textfield" hidden="true" />
			
			<Field id="SupportsColor" type="checkbox" hidden="true" defaultValue="true" />
			<Field id="SupportsRGB" type="checkbox" hidden="true" defaultValue="true" />
			<Field id="SupportsWhite" type="checkbox" hidden="true" defaultValue="true" />
			<Field id="SupportsWhiteTemperature" type="checkbox" hidden="true" defaultValue="true" />
			<Field id="WhiteTemperatureMin" type="textfield" hidden="true" defaultValue="2000" />
			<Field id="WhiteTemperatureMax" type="textfield" hidden="true" defaultValue="6500" />
			<Field id="SupportsRGBandWhiteSimultaneously" type="checkbox" hidden="true" defaultValue="false" />
		
			<!-- End Indigo Stock Dimmer Fields With RGB -->
			
			<Field type="list" id="huelights" defaultValue="" >
				<Label>Devices:</Label>
				<List class="self" filter="#filtereddevices#[index=huelights, excludeself=true, proptrue=supportsRGB, onlywith=brightnessLevel]" method="getCustomList" dynamicReload="true"/>
				<CallbackMethod>formFieldChanged</CallbackMethod>
			</Field>
			
			<Field type="menu" id="onwhen" defaultValue="any" >
				<Label>Group goes ON when:</Label>
				<List>
					<Option value="all">All devices are ON</Option>
					<Option value="any">Any device is ON</Option>
				</List>
				<CallbackMethod>formFieldChanged</CallbackMethod>
			</Field>
			
			<Field type="menu" id="keepsync" defaultValue="none" >
				<Label>When different sync to:</Label>
				<List class="self" filter="#plugin#[list=keepsync, nocache=false, callback=listHueSyncTo]" method="getCustomList" dynamicReload="true"/>
				<CallbackMethod>formFieldChanged</CallbackMethod>
			</Field>
			
			<Field type="separator" id="sep_beforegroupoff" visibleBindingId="beforeoff" visibleBindingValue="true" alwaysUseInDialogHeightCalc="true"/>
			
			<Field type="checkbox" id="beforeoff" defaultValue="false" >
				<Label> </Label>
				<Description>Before group goes OFF reset colors</Description>
				<CallbackMethod>formFieldChanged</CallbackMethod>
			</Field>
			
			<Field type="textfield" id="resetbrightness" defaultValue="0" visibleBindingId="beforeoff" visibleBindingValue="true" alwaysUseInDialogHeightCalc="true">
				<Label>Brightness:</Label>
			</Field>
			
			<Field type="textfield" id="resettemp" defaultValue="6500" visibleBindingId="beforeoff" visibleBindingValue="true" alwaysUseInDialogHeightCalc="true">
				<Label>Temperature:</Label>
			</Field>
			
			<Field type="textfield" id="resetwhite" defaultValue="1200" visibleBindingId="beforeoff" visibleBindingValue="true" alwaysUseInDialogHeightCalc="true" >
				<Label>White Level:</Label>
			</Field>
			
			<Field type="textfield" id="resetred" defaultValue="100" visibleBindingId="beforeoff" visibleBindingValue="true" alwaysUseInDialogHeightCalc="true" >
				<Label>Red:</Label>
			</Field>
			
			<Field type="textfield" id="resetgreen" defaultValue="100" visibleBindingId="beforeoff" visibleBindingValue="true" alwaysUseInDialogHeightCalc="true" >
				<Label>Green:</Label>
			</Field>
			
			<Field type="textfield" id="resetblue" defaultValue="100" visibleBindingId="beforeoff" visibleBindingValue="true" alwaysUseInDialogHeightCalc="true" >
				<Label>Blue:</Label>
			</Field>
						
			
		</ConfigUI>
		
		<States>
			<State id="statedisplay">
				<ValueType>String</ValueType>
				<TriggerLabel>Current device state</TriggerLabel>
				<ControlPageLabel>Current device state</ControlPageLabel>
			</State>
			
			<State id="sep1">
				<ValueType>Separator</ValueType>
			</State>
			
			<State id="hue">
				<ValueType>Number</ValueType>
				<TriggerLabel>Hue (°)</TriggerLabel>
				<ControlPageLabel>Hue (°)</ControlPageLabel>
			</State>
			<State id="saturation">
				<ValueType>Number</ValueType>
				<TriggerLabel>Saturation (%)</TriggerLabel>
				<ControlPageLabel>Saturation (%)</ControlPageLabel>
			</State>
			<State id="colorRed">
				<ValueType>Number</ValueType>
				<TriggerLabel>Red Level (0-255)</TriggerLabel>
				<ControlPageLabel>Red Level (0-255)</ControlPageLabel>
			</State>
			<State id="colorGreen">
				<ValueType>Number</ValueType>
				<TriggerLabel>Green Level (0-255)</TriggerLabel>
				<ControlPageLabel>Green Level (0-255)</ControlPageLabel>
			</State>
			<State id="colorBlue">
				<ValueType>Number</ValueType>
				<TriggerLabel>Blue Level (0-255)</TriggerLabel>
				<ControlPageLabel>Blue Level (0-255)</ControlPageLabel>
			</State>
			<State id="colorX">
				<ValueType>Number</ValueType>
				<TriggerLabel>X Color Chromaticity</TriggerLabel>
				<ControlPageLabel>X Color Chromaticity (CIE 1931)</ControlPageLabel>
			</State>
			<State id="colorY">
				<ValueType>Number</ValueType>
				<TriggerLabel>Y Color Chromaticity</TriggerLabel>
				<ControlPageLabel>Y Color Chromaticity (CIE 1931)</ControlPageLabel>
			</State>
			<State id="colorTemp">
				<ValueType>Number</ValueType>
				<TriggerLabel>Color Temperature (K)</TriggerLabel>
				<ControlPageLabel>Color Temperature (K)</ControlPageLabel>
			</State>
			<State id="colorMode">
				<ValueType>String</ValueType>
				<TriggerLabel>Color Mode</TriggerLabel>
				<ControlPageLabel>Color Mode</ControlPageLabel>
			</State>
			<State id="alertMode">
				<ValueType>String</ValueType>
				<TriggerLabel>Alert Mode</TriggerLabel>
				<ControlPageLabel>Alert Mode</ControlPageLabel>
			</State>
			<State id="effect">
				<ValueType>String</ValueType>
				<TriggerLabel>Effect</TriggerLabel>
				<ControlPageLabel>Effect</ControlPageLabel>
			</State>
			<State id="online">
				<ValueType>Boolean</ValueType>
				<TriggerLabel>Online</TriggerLabel>
				<ControlPageLabel>Online</ControlPageLabel>
			</State>
		</States>
		<UiDisplayStateId>statedisplay</UiDisplayStateId>
		
	</Device>

	<!-- =========== CONVERSION EXTENSION =========== -->
	<Device type="custom" id="epsdecon">
		<Name>Conversion Extension</Name>
		<ConfigUI>
			<Field type="menu" id="objectype" defaultValue="device" hidden="false">
				<Label>Object to convert:</Label>
				<List>
					<Option value="device">Device</Option>
					<Option value="variable">Variable</Option>
					<Option value="static">Static Value</Option>
				</List>
			</Field>
			
			<!-- =========== Keep here until 2.2.0+ =========== -->
			<Field type="checkbox" id="chdevice" defaultValue="true" hidden="true">
				<Label>Use device:</Label>
				<Description>Use device when checked, variable when unchecked</Description>
			</Field>
			
			<Field id="device" type="menu" visibleBindingId="objectype" visibleBindingValue="device">
				<Label>Device:</Label>
				<List class="indigo.devices" />
				<CallbackMethod>formFieldChanged</CallbackMethod>
			</Field>
			
			<Field id="variable" type="menu" visibleBindingId="objectype" visibleBindingValue="variable">
				<Label>Variable:</Label>
				<List class="indigo.variables" />
			</Field>
			
			<Field type="menu" id="states" defaultValue="4" visibleBindingId="objectype" visibleBindingValue="device" alwaysUseInDialogHeightCalc="true">
				<Label>State or property to convert:</Label>
				<List class="self" filter="#devicestatesvalues#[index=states, srcfield=device, allowui=True]" method="getCustomList" dynamicReload="true"/>
			</Field>
			
			<Field type="menu" id="action" defaultValue="bool" visibleBindingId="objectype" visibleBindingValue="device,variable,static" alwaysUseInDialogHeightCalc="true">
				<Label>Conversion action:</Label>
				<List>
					<Option value="ftoc">Convert Fahrenheit to Celsius</Option>
					<Option value="ctof">Convert Celsius to Fahrenheit</Option>
					<Option value="lux">Convert Lux to Word State</Option>
					<Option value="bool">Convert State to Boolean</Option>
					<Option value="dtmin">Convert Date/Time to Elapsed Minutes</Option>
					<Option value="boolstr">Convert Boolean to String</Option>
					<Option value="booltype">Convert to Boolean Type</Option>
					<Option value="true">Always True</Option>
					<Option value="false">Always False</Option>
					<Option value="string">Convert to String (and optionally trim)</Option>
					<Option value="dtformat">Convert Date/Time Format</Option>
					<Option value="strtonum">Convert String to Number</Option>
					<Option value="strtocase">Convert String to Cased String</Option>
				</List>
				<CallbackMethod>formFieldChanged</CallbackMethod>
			</Field>
			
			<Field type="menu" id="strcase" defaultValue="initial" visibleBindingId="action" visibleBindingValue="strtocase" alwaysUseInDialogHeightCalc="true">
				<Label>Convert to:</Label>
				<List>
					<Option value="initial">Initial Case</Option>
					<Option value="title">Title Case</Option>
					<Option value="upper">All Caps</Option>
					<Option value="lower">All Lower</Option>
				</List>
			</Field>
			
			<Field type="menu" id="numtype" defaultValue="int" visibleBindingId="action" visibleBindingValue="strtonum" >
				<Label>Convert to:</Label>
				<List>
					<Option value="int">Integer (whole number)</Option>
					<Option value="float">Float (include decimal)</Option>
				</List>
			</Field>
			
			<Field id="luxfactor" type="textfield" defaultValue="1" visibleBindingId="action" visibleBindingValue="lux" tooltip="Lux normally rates up to 100,001 but if your device detects to a lesser amount then enter that amount as a decimal.  For example, Fibaro motion sensors only detect up to 32,767 so you would enter .32767 here.  If you don't know then leave it as 1.">
				<Label>Adjustment:</Label>
			</Field>
			
			<Field id="inputdtformat" type="textfield" defaultValue="%Y-%m-%d %H:%M:%S" visibleBindingId="action" visibleBindingValue="dtformat">
				<Label>Input format:</Label>
			</Field>
			
			<Field id="outputdtformat" type="textfield" defaultValue="%Y-%m-%d %r" visibleBindingId="action" visibleBindingValue="dtformat">
				<Label>Output format:</Label>
			</Field>
			
			<Field id="maxlength" type="textfield" defaultValue="0" visibleBindingId="action" visibleBindingValue="string" alwaysUseInDialogHeightCalc="true">
				<Label>Max string length:</Label>
			</Field>
			
			<Field id="trimstart" type="textfield" defaultValue="0" visibleBindingId="action" visibleBindingValue="string,strtonum" alwaysUseInDialogHeightCalc="true">
				<Label>Remove beginning characters:</Label>
			</Field>
			
			<Field id="trimend" type="textfield" defaultValue="0" visibleBindingId="action" visibleBindingValue="string,strtonum" alwaysUseInDialogHeightCalc="true">
				<Label>Remove end characters:</Label>
			</Field>
			
			<Field type="menu" id="booltype" defaultValue="tf" visibleBindingId="action" visibleBindingValue="booltype" >
				<Label>Convert to:</Label>
				<List>
					<Option value="tf">True/False</Option>
					<Option value="yesno">Yes/No</Option>
					<Option value="onoff">On/Off</Option>
					<Option value="oz">1/0</Option>
					<Option value="oc">Open/Closed</Option>
					<Option value="lock">Locked/Unlocked</Option>
					<Option value="rdy">Ready/Not Ready</Option>
					<Option value="avail">Available/Unavailable</Option>
					<Option value="gbad">Good/Bad</Option>
				</List>
			</Field>
			
			<Field id="reverse" type="checkbox" defaultValue="false" visibleBindingId="action" visibleBindingValue="booltype">
				<Label> </Label>
				<Description>Reverse true/false values</Description>
			</Field>
			
			<Field id="dateformat" type="textfield" defaultValue="%Y-%m-%d %H:%M:%S" visibleBindingId="action" visibleBindingValue="dtmin">
				<Label>Date/Time Python Format:</Label>
			</Field>
			
			<Field id="lbl_extraaction" type="label" visibleBindingId="action" visibleBindingValue="dtmin" >
				<Label>
						      You can opt to run an action group if elapsed
						      minutes exceeds a threshold by selecting an
						      action below and a threshold of when to run it</Label>
			</Field>
			
			<Field id="extraaction" type="menu" visibleBindingId="action" visibleBindingValue="dtmin">
				<Label>Action:</Label>
				<List class="indigo.actionGroups" />
			</Field>
			
			<Field id="threshold" type="textfield" defaultValue="60" visibleBindingId="action" visibleBindingValue="dtmin">
				<Label>Threshold in minutes:</Label>
			</Field>
			
			<Field type="button" id="clear" visibleBindingId="action" visibleBindingValue="dtmin" >
				<Label> 
				</Label>
				<Title>Clear </Title>
				<CallbackMethod>btnClearConversionSettings</CallbackMethod>
			</Field>
		
			<Field id="precision" type="textfield" defaultValue="1" visibleBindingId="action" visibleBindingValue="ctof,ftoc">
				<Label>Decimal precision:</Label>
			</Field>
			
			<Field id="lbl_action" type="label" visibleBindingId="action" visibleBindingValue="bool" alwaysUseInDialogHeightCalc="true">
				<Label>
						      When converting to boolean BOTH 
						      'Converted value of device as string' AND 
						      'Converted value of device as boolean' will
						      show as either True or False.</Label>
			</Field>
			
			<Field id="lbl_space" type="label" >
				<Label>
				</Label>
			</Field>
			
			<Field id="sep_action" type="separator" visibleBindingId="action" visibleBindingValue="bool,boolstr,strbool" alwaysUseInDialogHeightCalc="true"/>
			
			<Field id="lbl_conditions" type="label" visibleBindingId="action" visibleBindingValue="bool" alwaysUseInDialogHeightCalc="true">
				<Label>You should use only ONE of the conditions below so that it equates to IF-Then-Else.  The other should be set to *ELSE*, however you can define both conditions so long as you know that if neither or both condition succeeds the state will default to False and may produce unexpected results.
				</Label>
			</Field>
			
			<Field id="truewhen" type="textfield" defaultValue="" visibleBindingId="action" visibleBindingValue="bool,boolstr,strbool" alwaysUseInDialogHeightCalc="true">
				<Label>For True value should equal:</Label>
			</Field>
			
			<Field id="falsewhen" type="textfield" defaultValue="*ELSE*" visibleBindingId="action" visibleBindingValue="bool,boolstr,strbool" alwaysUseInDialogHeightCalc="true">
				<Label>For False value should equal:</Label>
			</Field>
			
			<Field id="sep_general" type="separator" hidden="true"/>
			
			<Field id="label" type="label" hidden="true">
				<Label>
The following states will be available for your custom device:
				
Converted value (lower case true/false when converting state to boolean)
Converted number (only used when converting numbers)
Converted boolean (only used when converting state to boolean)

Tip:
If you want to swap True/False or On/Off states you can set the true value to "false" and the false value to "true".

				</Label>
			</Field>
			
		</ConfigUI>
		
		<States>
			<State id="statedisplay">
				<ValueType>String</ValueType>
				<TriggerLabel>Current device state</TriggerLabel>
				<ControlPageLabel>Current device state</ControlPageLabel>
			</State>
			<State id="convertedValue">
				<ValueType>String</ValueType>
				<TriggerLabel>Converted value of device as string</TriggerLabel>
				<ControlPageLabel>Converted value of device as string</ControlPageLabel>
			</State>
			<State id="convertedBoolean">
				<ValueType>String</ValueType>
				<TriggerLabel>Converted value of device as boolean</TriggerLabel>
				<ControlPageLabel>Converted value of device as boolean</ControlPageLabel>
			</State>
			<State id="convertedNumber">
				<ValueType>Number</ValueType>
				<TriggerLabel>Converted value of device as number</TriggerLabel>
				<ControlPageLabel>Converted value of device as number</ControlPageLabel>
			</State>
			
			
		</States>
		<UiDisplayStateId>statedisplay</UiDisplayStateId>
	</Device>
	
	<!-- =========== FILTER DEVICE =========== -->
	<Device type="sensor" id="Filter-Sensor">
		<Name>Filter Sensor</Name>
		<ConfigUI>
			<!-- Start Indigo Voice API Integration Block -->		
			<Field type="checkbox" id="voiceIntegrated" defaultValue="false" hidden="false">
				<Label>Enable for voice</Label>
				<Description>Integrate this device into voice plugins</Description>
				<CallbackMethod>voiceIntegrationFieldChange</CallbackMethod>
			</Field>
			
			<!-- Future use when more than just HKB is available under this API -->
			<Field type="menu" id="voiceIntegration" defaultValue="ALL" visibleBindingId="voiceIntegrated" visibleBindingValue="true" alwaysUseInDialogHeightCalc="true" hidden="true">
				<Label>Integration:</Label>
				<List class="self" filter="" method="voiceIntegrationPluginList" dynamicReload="true"/>
				<CallbackMethod>voiceIntegrationFieldChange</CallbackMethod>
			</Field>
			
			<Field type="checkbox" id="voiceHKBAvailable" defaultValue="false" hidden="true">
				<Label> </Label>
				<Description>Hidden checkbox indicating if HomeKit bridge is available for integration</Description>
			</Field>
			
			<Field type="checkbox" id="voiceHKBEnabled" defaultValue="true" hidden="true">
				<Label> </Label>
				<Description>Hidden checkbox indicating if HomeKit Bridge fields can be changed</Description>
			</Field>
			
			<Field type="checkbox" id="voiceAHBAvailable" defaultValue="false" hidden="true">
				<Label> </Label>
				<Description>Hidden checkbox indicating if Alexa-Hue bridge is available for integration</Description>
			</Field>
			
			<Field type="checkbox" id="voiceAHBEnabled" defaultValue="true" hidden="true">
				<Label> </Label>
				<Description>Hidden checkbox indicating if Alexa-Hue bridge fields can be changed</Description>
			</Field>
		
			<Field type="menu" id="voiceHKBServer" defaultValue="" visibleBindingId="voiceHKBAvailable" visibleBindingValue="true" enabledBindingId="voiceHKBEnabled" alwaysUseInDialogHeightCalc="true">
				<Label>HomeKit Bridge server:</Label>
				<List class="self" filter="" method="voiceHKBIntegrationServerList" dynamicReload="true"/>
				<CallbackMethod>voiceIntegrationFieldChange</CallbackMethod>
			</Field>
			
			<Field type="textfield" id="voiceHKBDeviceTypeList" defaultValue="FilterMaintenance,ContactSensor,OccupancySensor,MotionSensor" hidden="true">
				<Label>Hidden OPTIONAL field to limit the device types that this device can be in HomeKit (note that you'll need to do programatic updates of existing devices if you change this later)</Label>
			</Field>
			
			<Field type="menu" id="voiceHKBDeviceType" defaultValue="" visibleBindingId="voiceHKBAvailable" visibleBindingValue="true" enabledBindingId="voiceHKBEnabled" alwaysUseInDialogHeightCalc="true">
				<Label>HomeKit device type:</Label>
				<List class="self" filter="" method="voiceIntegrationHKBDeviceTypeList" dynamicReload="true"/>
				<CallbackMethod>voiceIntegrationFieldChange</CallbackMethod>
			</Field>
			
			<Field type="menu" id="voiceAHBServer" defaultValue="" visibleBindingId="voiceAHBAvailable" visibleBindingValue="true" enabledBindingId="voiceAHBEnabled" alwaysUseInDialogHeightCalc="true">
				<Label>Alexa-Hue Bridge server:</Label>
				<List class="self" filter="" method="voiceAHBIntegrationServerList" dynamicReload="true"/>
				<CallbackMethod>voiceIntegrationFieldChange</CallbackMethod>
			</Field>
			
			<Field type="checkbox" id="voiceAliasEnabled" defaultValue="true" hidden="true">
				<Label> </Label>
				<Description>Hidden checkbox indicating if the alias name can be changed</Description>
			</Field>
			
			<Field type="textfield" id="voiceAlias" defaultValue="" visibleBindingId="voiceIntegrated" visibleBindingValue="true" enabledBindingId="voiceAliasEnabled" alwaysUseInDialogHeightCalc="true" >
				<Label>Alias Name:</Label>
				<CallbackMethod>voiceIntegrationFieldChange</CallbackMethod>
			</Field>
			
			<Field type="separator" id="sep_hbbConnector" alwaysUseInDialogHeightCalc="true"/>
			<!-- End Indigo Voice Integration Block -->
			
			<Field id="AllowSensorValueChange" type="checkbox" hidden="true" defaultValue="false" />
			<Field id="SupportsSensorValue" type="checkbox" defaultValue="true" hidden="true" />
			
			<Field type="menu" id="method" defaultValue="na" >
				<Label>Runtime method:</Label>
				<List>
					<Option value="days">Days</Option>
					<Option value="weeks">Weeks</Option>
					<Option value="months">Months</Option>
					<Option value="runtime">HVAC Runtime</Option>
				</List>
			</Field>
			
			<Field type="menu" id="device" defaultValue="none" visibleBindingId="method" visibleBindingValue="runtime" alwaysUseInDialogHeightCalc="true" >
				<Label>Thermostat:</Label>
				<List class="indigo.devices" filter="indigo.thermostat"/>
				<CallbackMethod>formFieldChanged</CallbackMethod>
			</Field>
			
			<Field type="textfield" id="runtime" visibleBindingId="method" visibleBindingValue="runtime" alwaysUseInDialogHeightCalc="true" defaultValue="1000">
				<Label>Runtime hours:</Label>
			</Field>
			
			<Field type="textfield" id="timespan" visibleBindingId="method" visibleBindingValue="days,weeks,months" alwaysUseInDialogHeightCalc="true" defaultValue="">
				<Label>Time span:</Label>
			</Field>
			
			<Field type="separator" id="sep_1" />
			
			<Field type="menu" id="iconOn" defaultValue="humidity" >
				<Label>On icon:</Label>
				<List class="self" filter="#stateicons#[index=iconOn, srcfield=device, allowui=false]" method="getCustomList" dynamicReload="true"/>
			</Field>
			
			<Field type="menu" id="iconOff" defaultValue="humidity" >
				<Label>Off icon:</Label>
				<List class="self" filter="#stateicons#[index=iconOff, srcfield=device, allowui=false]" method="getCustomList" dynamicReload="true"/>
			</Field>
			
			
		</ConfigUI>
		
		<States>
			<State id="statedisplay">
				<ValueType>String</ValueType>
				<TriggerLabel>Current device state</TriggerLabel>
				<ControlPageLabel>Current device state</ControlPageLabel>
			</State>
			
			<State id="lifeLevel">
				<ValueType>Number</ValueType>
				<TriggerLabel>Filter life remaining</TriggerLabel>
				<ControlPageLabel>Filter life remaining</ControlPageLabel>
			</State>
			
			<State id="runtime">
				<ValueType>Number</ValueType>
				<TriggerLabel>Minutes of runtime since last reset</TriggerLabel>
				<ControlPageLabel>Minutes of runtime since last reset</ControlPageLabel>
			</State>
			
			<State id="lastChanged">
				<ValueType>String</ValueType>
				<TriggerLabel>Date and time of last filter change or reset</TriggerLabel>
				<ControlPageLabel>Date and time of last filter change or reset</ControlPageLabel>
			</State>
			
			<State id="lastUpdate">
				<ValueType>String</ValueType>
				<TriggerLabel>Date and time of last state update</TriggerLabel>
				<ControlPageLabel>Date and time of last state update</ControlPageLabel>
			</State>
			
			<State id="hvacStart">
				<ValueType>String</ValueType>
				<TriggerLabel>Date and time when HVAC fan started running</TriggerLabel>
				<ControlPageLabel>Date and time when HVAC fan started running</ControlPageLabel>
			</State>
			
			<State id="hvacStop">
				<ValueType>String</ValueType>
				<TriggerLabel>Date and time when HVAC fan stopped running</TriggerLabel>
				<ControlPageLabel>Date and time when HVAC fan stopped running</ControlPageLabel>
			</State>
			
			<State id="hvacRunning">
				<ValueType>Boolean</ValueType>
				<TriggerLabel>HVAC fan is running</TriggerLabel>
				<ControlPageLabel>HVAC fan is running</ControlPageLabel>
			</State>
			
			<State id="hvacruntime">
				<ValueType>Number</ValueType>
				<TriggerLabel>Minutes of HVAC runtime since last reset</TriggerLabel>
				<ControlPageLabel>Minutes of HVAC runtime since last reset</ControlPageLabel>
			</State>
			
			<State id="voiceAPIData">
				<ValueType>String</ValueType>
				<TriggerLabel>Indigo Voice API Data</TriggerLabel>
				<ControlPageLabel>Indigo Voice API Data</ControlPageLabel>
			</State>
			
			<State id="sep1">
				<ValueType>Separator</ValueType>
			</State>
		</States>
		<UiDisplayStateId>statedisplay</UiDisplayStateId>
		
	</Device>	
	
	<!-- =========== RELAY TO DIMMER CONVERSION =========== -->
	<Device type="dimmer" id="Relay-To-Dimmer">
		<Name>Relay To Dimmer Converter</Name>
		<ConfigUI>
			<!-- Start Indigo Voice API Integration Block -->		
			<Field type="checkbox" id="voiceIntegrated" defaultValue="false" hidden="false">
				<Label>Enable for voice</Label>
				<Description>Integrate this device into voice plugins</Description>
				<CallbackMethod>voiceIntegrationFieldChange</CallbackMethod>
			</Field>
			
			<!-- Future use when more than just HKB is available under this API -->
			<Field type="menu" id="voiceIntegration" defaultValue="ALL" visibleBindingId="voiceIntegrated" visibleBindingValue="true" alwaysUseInDialogHeightCalc="true" hidden="true">
				<Label>Integration:</Label>
				<List class="self" filter="" method="voiceIntegrationPluginList" dynamicReload="true"/>
				<CallbackMethod>voiceIntegrationFieldChange</CallbackMethod>
			</Field>
			
			<Field type="checkbox" id="voiceHKBAvailable" defaultValue="false" hidden="true">
				<Label> </Label>
				<Description>Hidden checkbox indicating if HomeKit bridge is available for integration</Description>
			</Field>
			
			<Field type="checkbox" id="voiceHKBEnabled" defaultValue="true" hidden="true">
				<Label> </Label>
				<Description>Hidden checkbox indicating if HomeKit Bridge fields can be changed</Description>
			</Field>
			
			<Field type="checkbox" id="voiceAHBAvailable" defaultValue="false" hidden="true">
				<Label> </Label>
				<Description>Hidden checkbox indicating if Alexa-Hue bridge is available for integration</Description>
			</Field>
			
			<Field type="checkbox" id="voiceAHBEnabled" defaultValue="true" hidden="true">
				<Label> </Label>
				<Description>Hidden checkbox indicating if Alexa-Hue bridge fields can be changed</Description>
			</Field>
		
			<Field type="menu" id="voiceHKBServer" defaultValue="" visibleBindingId="voiceHKBAvailable" visibleBindingValue="true" enabledBindingId="voiceHKBEnabled" alwaysUseInDialogHeightCalc="true">
				<Label>HomeKit Bridge server:</Label>
				<List class="self" filter="" method="voiceHKBIntegrationServerList" dynamicReload="true"/>
				<CallbackMethod>voiceIntegrationFieldChange</CallbackMethod>
			</Field>
			
			<Field type="textfield" id="voiceHKBDeviceTypeList" defaultValue="Lightbulb,Window,Door,WindowCovering" hidden="true">
				<Label>Hidden OPTIONAL field to limit the device types that this device can be in HomeKit (note that you'll need to do programatic updates of existing devices if you change this later)</Label>
			</Field>
			
			<Field type="menu" id="voiceHKBDeviceType" defaultValue="" visibleBindingId="voiceHKBAvailable" visibleBindingValue="true" enabledBindingId="voiceHKBEnabled" alwaysUseInDialogHeightCalc="true">
				<Label>HomeKit device type:</Label>
				<List class="self" filter="" method="voiceIntegrationHKBDeviceTypeList" dynamicReload="true"/>
				<CallbackMethod>voiceIntegrationFieldChange</CallbackMethod>
			</Field>
			
			<Field type="menu" id="voiceAHBServer" defaultValue="" visibleBindingId="voiceAHBAvailable" visibleBindingValue="true" enabledBindingId="voiceAHBEnabled" alwaysUseInDialogHeightCalc="true">
				<Label>Alexa-Hue Bridge server:</Label>
				<List class="self" filter="" method="voiceAHBIntegrationServerList" dynamicReload="true"/>
				<CallbackMethod>voiceIntegrationFieldChange</CallbackMethod>
			</Field>
			
			<Field type="checkbox" id="voiceAliasEnabled" defaultValue="true" hidden="true">
				<Label> </Label>
				<Description>Hidden checkbox indicating if the alias name can be changed</Description>
			</Field>
			
			<Field type="textfield" id="voiceAlias" defaultValue="" visibleBindingId="voiceIntegrated" visibleBindingValue="true" enabledBindingId="voiceAliasEnabled" alwaysUseInDialogHeightCalc="true" >
				<Label>Alias Name:</Label>
				<CallbackMethod>voiceIntegrationFieldChange</CallbackMethod>
			</Field>
			
			<Field type="separator" id="sep_hbbConnector" alwaysUseInDialogHeightCalc="true"/>
			<!-- End Indigo Voice Integration Block -->
			
			<Field type="menu" id="device" defaultValue="none" >
				<Label>Source device:</Label>
				<List class="indigo.devices" filter="indigo.relay"/>
				<CallbackMethod>formFieldChanged</CallbackMethod>
			</Field>
			
			<Field type="separator" id="sep_1" />
			
			<Field type="menu" id="iconOn" defaultValue="humidity" >
				<Label>On icon:</Label>
				<List class="self" filter="#stateicons#[index=iconOn, srcfield=device, allowui=false]" method="getCustomList" dynamicReload="true"/>
			</Field>
			
			<Field type="menu" id="iconOff" defaultValue="humidity" >
				<Label>Off icon:</Label>
				<List class="self" filter="#stateicons#[index=iconOff, srcfield=device, allowui=false]" method="getCustomList" dynamicReload="true"/>
			</Field>
			
			<Field type="separator" id="sep_2" />
			
			<Field type="checkbox" id="calibrate" defaultValue="false" >
				<Label> </Label>
				<Description>Calibration mode</Description>
				<CallbackMethod>formFieldChanged</CallbackMethod>
			</Field>
			
		</ConfigUI>
		
		<States>
			<State id="statedisplay">
				<ValueType>String</ValueType>
				<TriggerLabel>Current device state</TriggerLabel>
				<ControlPageLabel>Current device state</ControlPageLabel>
			</State>
			
			<State id="calibration">
				<ValueType>Number</ValueType>
				<TriggerLabel>Calibrated open-to-close runtime</TriggerLabel>
				<ControlPageLabel>Calibrated open-to-close runtime</ControlPageLabel>
			</State>
			
			<State id="currentengagement">
				<ValueType>Number</ValueType>
				<TriggerLabel>Seconds of engagement applied to source</TriggerLabel>
				<ControlPageLabel>Seconds of engagement applied to source</ControlPageLabel>
			</State>
			
			<State id="voiceAPIData">
				<ValueType>String</ValueType>
				<TriggerLabel>Indigo Voice API Data</TriggerLabel>
				<ControlPageLabel>Indigo Voice API Data</ControlPageLabel>
			</State>
			
			<State id="position">
				<ValueType>
					<List>
						<Option value="opening">Opening</Option>
						<Option value="open">Open</Option>
						<Option value="partopen">Partly Open</Option>
						<Option value="halfopen">Half Open</Option>
						<Option value="closing">Closing</Option>
						<Option value="closed">Closed</Option>
						<Option value="partclosed">Partly Closed</Option>
						<Option value="halfclosed">Half Closed</Option>
					</List>
				</ValueType>
				<TriggerLabel>Position Changed</TriggerLabel>
				<TriggerLabelPrefix>Position Changed to</TriggerLabelPrefix>
				<ControlPageLabel>Current Position</ControlPageLabel>
				<ControlPageLabelPrefix>Position is</ControlPageLabelPrefix>
			</State>	
			
			<State id="swing">
				<ValueType>
					<List>
						<Option value="open">Open</Option>
						<Option value="closed">Closed</Option>
					</List>
				</ValueType>
				<TriggerLabel>Swing Changed</TriggerLabel>
				<TriggerLabelPrefix>Swing Changed to</TriggerLabelPrefix>
				<ControlPageLabel>Current Swing</ControlPageLabel>
				<ControlPageLabelPrefix>Swing is</ControlPageLabelPrefix>
			</State>	
			
			<State id="sep1">
				<ValueType>Separator</ValueType>
			</State>
		</States>
		<UiDisplayStateId>statedisplay</UiDisplayStateId>
		
	</Device>	
	

	
	<!-- =========== THERMOSTAT EXTENSION =========== -->
	<Device type="custom" id="epsdeth">
		<Name>Thermostat Extension</Name>
		<ConfigUI>
			<Field id="device" type="menu" >
				<Label>Thermostat Device:</Label>
				<List class="indigo.devices" filter="indigo.thermostat" />
			</Field>
			
			<Field type="menu" id="measurement" defaultValue="F" >
				<Label>Show temps in:</Label>
				<List>
					<Option value="F">Fahrenheit</Option>
					<Option value="C">Celsius</Option>
				</List>
			</Field>
					
			<Field id="sep_device" type="separator" />
			
			<Field id="preset1setcool" type="textfield" defaultValue="73">
				<Label>Preset 1 set cool temperature to:</Label>
			</Field>
			
			<Field id="preset1setheat" type="textfield" defaultValue="70">
				<Label>Set heat temperature to:</Label>
			</Field>
			
			<Field type="menu" id="preset1system" defaultValue="na" >
				<Label>Set mode to:</Label>
				<List>
					<Option value="off">Off</Option>
					<Option value="heat">Heat</Option>
					<Option value="cool">Cool</Option>
					<Option value="na">No change</Option>
				</List>
			</Field>
			
			<Field type="menu" id="preset1fan" defaultValue="na" >
				<Label>Set fan to:</Label>
				<List>
					<Option value="auto">Auto on</Option>
					<Option value="always">Always on</Option>
					<Option value="na">No change</Option>
				</List>
			</Field>
			
			<Field id="sep_preset1" type="separator" />
				<Field id="preset2setcool" type="textfield" defaultValue="73">
				<Label>Preset 2 set cool temperature to:</Label>
			</Field>
			
			<Field id="preset2setheat" type="textfield" defaultValue="70">
				<Label>Set heat temperature to:</Label>
			</Field>
			
			<Field type="menu" id="preset2system" defaultValue="na" >
				<Label>Set mode to:</Label>
				<List>
					<Option value="off">Off</Option>
					<Option value="heat">Heat</Option>
					<Option value="cool">Cool</Option>
					<Option value="na">No change</Option>
				</List>
			</Field>
			
			<Field type="menu" id="preset2fan" defaultValue="na" >
				<Label>Set fan to:</Label>
				<List>
					<Option value="auto">Auto on</Option>
					<Option value="always">Always on</Option>
					<Option value="na">No change</Option>
				</List>
			</Field>
			
			<Field id="sep_preset2" type="separator" />
				<Field id="preset3setcool" type="textfield" defaultValue="73">
				<Label>Preset 3 set cool temperature to:</Label>
			</Field>
			
			<Field id="preset3setheat" type="textfield" defaultValue="70">
				<Label>Set heat temperature to:</Label>
			</Field>
			
			<Field type="menu" id="preset3system" defaultValue="na" >
				<Label>Set mode to:</Label>
				<List>
					<Option value="off">Off</Option>
					<Option value="heat">Heat</Option>
					<Option value="cool">Cool</Option>
					<Option value="na">No change</Option>
				</List>
			</Field>
			
			<Field type="menu" id="preset3fan" defaultValue="na" >
				<Label>Set fan to:</Label>
				<List>
					<Option value="auto">Auto on</Option>
					<Option value="always">Always on</Option>
					<Option value="na">No change</Option>
				</List>
			</Field>
			
			<Field id="sep_preset3" type="separator" />
				<Field id="preset4setcool" type="textfield" defaultValue="73">
				<Label>Preset 4 set cool temperature to:</Label>
			</Field>
			
			<Field id="preset4setheat" type="textfield" defaultValue="70">
				<Label>Set heat temperature to:</Label>
			</Field>
			
			<Field type="menu" id="preset4system" defaultValue="na" >
				<Label>Set mode to:</Label>
				<List>
					<Option value="off">Off</Option>
					<Option value="heat">Heat</Option>
					<Option value="cool">Cool</Option>
					<Option value="na">No change</Option>
				</List>
			</Field>
			
			<Field type="menu" id="preset4fan" defaultValue="na" >
				<Label>Set fan to:</Label>
				<List>
					<Option value="auto">Auto on</Option>
					<Option value="always">Always on</Option>
					<Option value="na">No change</Option>
				</List>
			</Field>
			
			<Field id="sep_preset4" type="separator" />
			
			<Field type="menu" id="setmode" defaultValue="heat" >
				<Label>Default set mode:</Label>
				<List>
					<Option value="heat">Heat</Option>
					<Option value="cool">Cool</Option>
				</List>
			</Field>
			
			<Field id="smartset" type="textfield" defaultValue="5">
				<Label>Opposite mode degree offset:</Label>
			</Field>
			
			<Field id="timeout" type="textfield" defaultValue="60">
				<Label>Preset auto-off (minutes):</Label>
			</Field>
			
			<Field id="failsafe" type="textfield" defaultValue="70">
				<Label>Max auto-off temperature:</Label>
			</Field>
			
			<Field type="menu" id="toggleparam" defaultValue="auto" >
				<Label>Toggling system On/Off:</Label>
				<List>
					<Option value="heat">Toggles Heat to Off</Option>
					<Option value="cool">Toggles Cool to Off</Option>
					<Option value="auto">Toggles Auto to Off</Option>
				</List>
			</Field>
			
			<Field type="menu" id="statedisplay" defaultValue="currenttemp" >
				<Label>For device state show:</Label>
				<List>
					<Option value="currenttemp">Current Temperature</Option>
					<Option value="currenthumidity">Current Humidity</Option>
					<Option value="highttemp">High Temperature</Option>
					<Option value="lowtemp">Low Temperature</Option>
					<Option value="highhumidity">High Humidity</Option>
					<Option value="lowhumidity">Low Humidity</Option>
					<Option value="preset">Preset Number</Option>
					<Option value="setpoint">Current setpoint</Option>
					<Option value="setcool">Cool setpoint</Option>
					<Option value="setheat">Heat setpoint</Option>
					<Option value="setmode">Set mode (heat / cool)</Option>
				</List>
			</Field>
			
			<Field id="sep_general" type="separator" />
			
			<Field id="label" type="label">
				<Label>The following states will be available for your thermostat device:
				
System is On (true = On, false = Off)
Fan is On (true = fan always On, false = fan auto)
Current preset (4 presets)
Preset X On/Off (X being presets 1 through 4)
Set mode (true = cool, false = heat)

The following actions will be available for your thermostat device:

Toggle system On/Off
Toggle fan mode Always/Auto
Toggle presets On/Off
Toggle set mode
Smart increase/decrease set mode
Reset preset auto timeout

				</Label>
			</Field>
		</ConfigUI>
		
		<States>
			<State id="statedisplay">
				<ValueType>String</ValueType>
				<TriggerLabel>Current device state</TriggerLabel>
				<ControlPageLabel>Current device state</ControlPageLabel>
			</State>
			
			<State id="sep1">
				<ValueType>Separator</ValueType>
			</State>
			
			<State id="setMode">
				<ValueType>Boolean</ValueType>
				<TriggerLabel>Current set mode, True = Cool, False = Heat</TriggerLabel>
				<ControlPageLabel>Current set mode, True = Cool, False = Heat</ControlPageLabel>
			</State>
			
			<State id="fanOn">
				<ValueType>Boolean</ValueType>
				<TriggerLabel>Fan is always on</TriggerLabel>
				<ControlPageLabel>Fan is always on</ControlPageLabel>
			</State>
			
			<State id="systemOn">
				<ValueType>Boolean</ValueType>
				<TriggerLabel>System is on</TriggerLabel>
				<ControlPageLabel>System is on</ControlPageLabel>
			</State>
			
			<State id="sep2">
				<ValueType>Separator</ValueType>
			</State>
			
			<State id="setModeSetPoint">
				<ValueType>Number</ValueType>
				<TriggerLabel>Setpoint of the current set mode</TriggerLabel>
				<ControlPageLabel>Setpoint of the current set mode</ControlPageLabel>
			</State>
			
			<State id="sep3">
				<ValueType>Separator</ValueType>
			</State>
			
			<State id="presetMemHeat">
				<ValueType>Number</ValueType>
				<TriggerLabel>Preset heat memory</TriggerLabel>
				<ControlPageLabel>Preset heat memory</ControlPageLabel>
			</State>
			
			<State id="presetMemCool">
				<ValueType>Number</ValueType>
				<TriggerLabel>Preset cool memory</TriggerLabel>
				<ControlPageLabel>Preset cool memory</ControlPageLabel>
			</State>
			
			<State id="presetMemFanAuto">
				<ValueType>Boolean</ValueType>
				<TriggerLabel>Preset fan auto mode memory</TriggerLabel>
				<ControlPageLabel>Preset fan auto mode memory</ControlPageLabel>
			</State>
			
			<State id="presetMemMode">
				<ValueType>Number</ValueType>
				<TriggerLabel>Preset system mode memory</TriggerLabel>
				<ControlPageLabel>Preset system mode memory</ControlPageLabel>
			</State>
			
			<State id="sep4">
				<ValueType>Separator</ValueType>
			</State>
			
			<State id="presetOn1">
				<ValueType>Boolean</ValueType>
				<TriggerLabel>Preset 1 active</TriggerLabel>
				<ControlPageLabel>Preset 1 active</ControlPageLabel>
			</State>
			
			<State id="presetOn2">
				<ValueType>Boolean</ValueType>
				<TriggerLabel>Preset 2 active</TriggerLabel>
				<ControlPageLabel>Preset 2 active</ControlPageLabel>
			</State>
			
			<State id="presetOn3">
				<ValueType>Boolean</ValueType>
				<TriggerLabel>Preset 3 active</TriggerLabel>
				<ControlPageLabel>Preset 3 active</ControlPageLabel>
			</State>
			
			<State id="presetOn4">
				<ValueType>Boolean</ValueType>
				<TriggerLabel>Preset 4 active</TriggerLabel>
				<ControlPageLabel>Preset 4 active</ControlPageLabel>
			</State>
			
			<State id="sep5">
				<ValueType>Separator</ValueType>
			</State>
			
			<State id="presetTimeout">
				<ValueType>Number</ValueType>
				<TriggerLabel>Preset auto off time remaining</TriggerLabel>
				<ControlPageLabel>Preset auto off time remaining</ControlPageLabel>
			</State>
			
			<State id="presetExpires">
				<ValueType>String</ValueType>
				<TriggerLabel>Preset expiration date/time</TriggerLabel>
				<ControlPageLabel>Preset expiration date/time</ControlPageLabel>
			</State>
			
			<State id="sep6">
				<ValueType>Separator</ValueType>
			</State>
			
			<State id="hightemp">
				<ValueType>String</ValueType>
				<TriggerLabel>Daily high temperature</TriggerLabel>
				<ControlPageLabel>Daily high temperature</ControlPageLabel>
			</State>
			
			<State id="lowtemp">
				<ValueType>String</ValueType>
				<TriggerLabel>Daily low temperature</TriggerLabel>
				<ControlPageLabel>Daily low temperature</ControlPageLabel>
			</State>
			
			<State id="sep7">
				<ValueType>Separator</ValueType>
			</State>
			
			<State id="highhumidity">
				<ValueType>String</ValueType>
				<TriggerLabel>Daily high humidity</TriggerLabel>
				<ControlPageLabel>Daily high humidity</ControlPageLabel>
			</State>
			
			<State id="lowhumidity">
				<ValueType>String</ValueType>
				<TriggerLabel>Daily low humidity</TriggerLabel>
				<ControlPageLabel>Daily low humidity</ControlPageLabel>
			</State>
			
			<State id="sep8">
				<ValueType>Separator</ValueType>
			</State>
			
			<State id="lasthighlowreset">
				<ValueType>String</ValueType>
				<TriggerLabel>Last time high and low values were reset</TriggerLabel>
				<ControlPageLabel>Last time high and low values were reset</ControlPageLabel>
			</State>
			
		</States>
		<UiDisplayStateId>statedisplay</UiDisplayStateId>
	</Device>	
	
	<!-- =========== WEATHER EXTENSION =========== -->
	<Device type="custom" id="epsdews">
		<SupportURL>https://github.com/Colorado4Wheeler/Device-Extensions/wiki/Extension:-Weather</SupportURL>
		<Name>Weather Extension</Name>
		<ConfigUI>
			<Field id="device" type="menu">
				<Label>Weather Device:</Label>
				<List class="indigo.devices" />
				<CallbackMethod>formFieldChanged</CallbackMethod>
			</Field>
			
			<Field type="menu" id="measurement" defaultValue="F" >
				<Label>Show temps in:</Label>
				<List>
					<Option value="F">Fahrenheit</Option>
					<Option value="C">Celsius</Option>
				</List>
			</Field>
			
			<Field type="menu" id="statedisplay" defaultValue="currenttemp" >
				<Label>For device state show:</Label>
				<List>
					<Option value="currenttemp">Current Temperature</Option>
					<Option value="currenthumidity">Current Humidity</Option>
					<Option value="highttemp">High Temperature</Option>
					<Option value="lowtemp">Low Temperature</Option>
					<Option value="highhumidity">High Humidity</Option>
					<Option value="lowhumidity">Low Humidity</Option>
				</List>
			</Field>
			
			<Field id="sep_general" type="separator" />
			
			<Field type="menu" id="temperature" defaultValue="temperature_F" >
				<Label>State for temperature:</Label>
				<List class="self" filter="#devicestates#[index=temperature, srcfield=device, allowui=false]" method="getCustomList" dynamicReload="true"/>
			</Field>
			
			<Field type="menu" id="humidity" defaultValue="humidity" >
				<Label>State for humidity:</Label>
				<List class="self" filter="#devicestates#[index=humidity, srcfield=device, allowui=false]" method="getCustomList" dynamicReload="true"/>
			</Field>
			
			<Field type="menu" id="rain" defaultValue="weather" >
				<Label>State indicating rain:</Label>
				<List class="self" filter="#devicestates#[index=rain, srcfield=device, allowui=false]" method="getCustomList" dynamicReload="true"/>
			</Field>
			
			<Field type="menu" id="rainstatetype" defaultValue="string">
				<Label>Rain state type:</Label>
				<List>
					<Option value="string">String / Number</Option>
					<Option value="boolean">Boolean</Option>
				</List>
			</Field>
			
			<Field id="rainvalue" type="textfield" defaultValue="Rain" >
				<Label>Value to indicate rain:</Label>
			</Field>
			
			<Field id="sep_states" type="separator" />
			
			<Field id="label" type="label">
				<Label>The following states will be available for your weather device:
				
Daily high temp
Daily low temp
Daily high humidity
Daily low humidity
Is raining (yes/no)
				</Label>
			</Field>
		</ConfigUI>
		
		<States>
			<State id="statedisplay">
				<ValueType>String</ValueType>
				<TriggerLabel>Current device state</TriggerLabel>
				<ControlPageLabel>Current device state</ControlPageLabel>
			</State>
			
			<State id="sep1">
				<ValueType>Separator</ValueType>
			</State>
			
			<State id="raining">
				<ValueType>Boolean</ValueType>
				<TriggerLabel>Raining</TriggerLabel>
				<ControlPageLabel>Raining</ControlPageLabel>
			</State>
			
			<State id="rainpending">
				<ValueType>Boolean</ValueType>
				<TriggerLabel>Rain probable (implementation TBD)</TriggerLabel>
				<ControlPageLabel>Rain probable (implementation TBD)</ControlPageLabel>
			</State>
			
			<State id="isrecordhigh">
				<ValueType>Boolean</ValueType>
				<TriggerLabel>Todays high temperature was higher than the record high</TriggerLabel>
				<ControlPageLabel>Todays high temperature was higher than the record high</ControlPageLabel>
			</State>
			
			<State id="isrecordlow">
				<ValueType>Boolean</ValueType>
				<TriggerLabel>Todays low temperature was lower than the record lower</TriggerLabel>
				<ControlPageLabel>Todays low temperature was lower than the record low</ControlPageLabel>
			</State>
			
			<State id="sep2">
				<ValueType>Separator</ValueType>
			</State>
			
			<State id="hightemp">
				<ValueType>String</ValueType>
				<TriggerLabel>Daily high temperature</TriggerLabel>
				<ControlPageLabel>Daily high temperature</ControlPageLabel>
			</State>
			
			<State id="lowtemp">
				<ValueType>String</ValueType>
				<TriggerLabel>Daily low temperature</TriggerLabel>
				<ControlPageLabel>Daily low temperature</ControlPageLabel>
			</State>
			
			<State id="sep3">
				<ValueType>Separator</ValueType>
			</State>
			
			<State id="highhumidity">
				<ValueType>String</ValueType>
				<TriggerLabel>Daily high humidity</TriggerLabel>
				<ControlPageLabel>Daily high humidity</ControlPageLabel>
			</State>
			
			<State id="lowhumidity">
				<ValueType>String</ValueType>
				<TriggerLabel>Daily low humidity</TriggerLabel>
				<ControlPageLabel>Daily low humidity</ControlPageLabel>
			</State>
			
			<State id="sep4">
				<ValueType>Separator</ValueType>
			</State>
			
			<State id="lasthighlowreset">
				<ValueType>String</ValueType>
				<TriggerLabel>Last time high and low values were reset</TriggerLabel>
				<ControlPageLabel>Last time high and low values were reset</ControlPageLabel>
			</State>
			
		</States>
		<UiDisplayStateId>statedisplay</UiDisplayStateId>
	</Device>
	
	<!-- =========== URL EXTENSION =========== -->	
	<Device type="relay" id="epsdeurl">
		<Name>URL Extension</Name>
		<ConfigUI>
			<Field id="onCommand" type="textfield" defaultValue="" >
				<Label>Turn on URL:</Label>
			</Field>
			
			<Field id="offCommand" type="textfield" defaultValue="" >
				<Label>Turn off URL:</Label>
			</Field>
			
			<Field id="toggleCommand" type="textfield" defaultValue="" >
				<Label>Toggle on/off URL:</Label>
			</Field>
			
			<Field id="sep_toggles" type="separator" />
			
			<Field id="url" type="textfield" defaultValue="" >
				<Label>Optional command URL:</Label>
			</Field>
			
			<Field id="sep_url" type="separator" />
			
			<Field id="username" type="textfield" defaultValue="" >
				<Label>Optional User name:</Label>
			</Field>
			
			<Field id="password" type="textfield" defaultValue="" secure="true">
				<Label>Optional Password:</Label>
			</Field>
					
			<Field id="sep_general" type="separator" />
			
			<Field id="label" type="label">
				<Label>
This acts as a normal On/Off device in Indigo, use it the same way you would any other switch.  This is a blind command, meaning there is no feedback so no way to know if it is on or off, leave the toggle URL blank then the plugin will alternate between the on and off commands depending on which state (on or off) the device currently is in.  If you get stuck on this you can execute the "Force Off" action to force it to an off state.

				</Label>
			</Field>
			
		</ConfigUI>
		
		<States>
			<State id="statedisplay">
				<ValueType>String</ValueType>
				<TriggerLabel>Current device state</TriggerLabel>
				<ControlPageLabel>Current device state</ControlPageLabel>
			</State>
		</States>
		<UiDisplayStateId>statedisplay</UiDisplayStateId>
	</Device>	
	
	<!-- =========== IRRIGATION EXTENSION =========== -->
	<Device type="custom" id="epsdeirr">
		<Name>Irrigation Extension</Name>
		<ConfigUI>
			<Field id="device" type="menu" >
				<Label>Irrigation Device:</Label>
				<List class="indigo.devices" filter="indigo.sprinkler" />
			</Field>
			
			<Field type="menu" id="timeformat" defaultValue="ms">
				<Label>Time format:</Label>
				<List>
					<Option value="hms">HH:MM:SS</Option>
					<Option value="hm">HH:MM</Option>
					<Option value="ms">MM:SS</Option>
					<Option value="mm">MM</Option>
					<Option value="mmmmtoss">MMMM to :SS</Option>
				</List>
			</Field>
			
			<Field id="sep_device" type="separator" visibleBindingId="rain" visibleBindingValue="true" />
			
			<Field id="rain" type="checkbox" defaultValue="false" >
				<Label> </Label>
				<Description>Enable rain management</Description>
			</Field>
			
			<Field id="raindevice" type="menu" visibleBindingId="rain" visibleBindingValue="true">
				<Label>Device with rain detection state:</Label>
				<List class="indigo.devices" />
				<CallbackMethod>formFieldChanged</CallbackMethod>
			</Field>
			
			<Field type="menu" id="states" defaultValue="4" visibleBindingId="rain" visibleBindingValue="true" >
				<Label>State indicating rain:</Label>
				<List class="self" filter="#devicestatesvalues#[index=states, srcfield=raindevice, allowui=False]" method="getCustomList" dynamicReload="true"/>
			</Field>
			
			<Field type="menu" id="statetype" defaultValue="string" visibleBindingId="rain" visibleBindingValue="true">
				<Label>Rain state type:</Label>
				<List>
					<Option value="string">String / Number</Option>
					<Option value="boolean">Boolean</Option>
				</List>
			</Field>
			
			<Field id="rainvalue" type="textfield" defaultValue="Rain" visibleBindingId="statetype" visibleBindingValue="string">
				<Label>Value to indicate rain:</Label>
			</Field>
			
			<Field id="sep_raindevice" type="separator" visibleBindingId="rain" visibleBindingValue="true" />
			
			<Field type="menu" id="rainaction" defaultValue="stop" visibleBindingId="rain" visibleBindingValue="true">
				<Label>If raining:</Label>
				<List>
					<Option value="nothing">Do nothing</Option>
					<Option value="stop">Stop sprinklers</Option>
					<Option value="pause">Pause sprinklers</Option>
					<Option value="resume">Pause and resume when clear</Option>
				</List>
			</Field>
			
			<Field id="resetrainaction" type="checkbox" defaultValue="true" visibleBindingId="rainaction" visibleBindingValue="pause,resume">
				<Label> </Label>
				<Description>Stop sprinklers if condition lasts more than an hour</Description>
			</Field>
			
			<Field type="menu" id="rainpendingaction" defaultValue="nothing" visibleBindingId="rain" visibleBindingValue="true" hidden="true">
				<Label>If rain probable:</Label>
				<List>
					<Option value="nothing">Do nothing</Option>
					<Option value="stop">Stop sprinklers</Option>
					<Option value="pause">Pause sprinklers</Option>
					<Option value="resume">Pause and resume when clear</Option>
				</List>
			</Field>
			
			<Field id="resetrainpendingaction" type="checkbox" defaultValue="true" visibleBindingId="rainpendingaction" visibleBindingValue="pause,resume" hidden="true">
				<Label> </Label>
				<Description>Stop sprinklers if condition lasts more than an hour</Description>
			</Field>
			
			<Field id="sep_rain" type="separator" />
			
			<Field id="lastschedule" type="checkbox" defaultValue="false">
				<Label> </Label>
				<Description>Remember the last schedule ran for zone times when sprinklers turned off</Description>
			</Field>
							
			<Field id="sep_general" type="separator" />
			
			<Field id="label" type="label">
				<Label>
The following states will be available for your irrigation device:
				
Zone run time remaining
All zones run time remaining
Current running zone name
Schedule is paused (true/false)

				</Label>
			</Field>
		</ConfigUI>
		
		<States>
		
			<State id="statedisplay">
				<ValueType>String</ValueType>
				<TriggerLabel>Current device state</TriggerLabel>
				<ControlPageLabel>Current device state</ControlPageLabel>
			</State>
			
			<State id="sep1">
				<ValueType>Separator</ValueType>
			</State>
			
			<State id="raining">
				<ValueType>Boolean</ValueType>
				<TriggerLabel>Raining</TriggerLabel>
				<ControlPageLabel>Raining</ControlPageLabel>
			</State>
			
			<State id="paused">
				<ValueType>Boolean</ValueType>
				<TriggerLabel>Schedule is paused</TriggerLabel>
				<ControlPageLabel>Schedule is paused</ControlPageLabel>
			</State>
			
			<State id="quickpaused">
				<ValueType>Boolean</ValueType>
				<TriggerLabel>Schedule is quick paused</TriggerLabel>
				<ControlPageLabel>Schedule is quick paused</ControlPageLabel>
			</State>
			
			<State id="resuming">
				<ValueType>Boolean</ValueType>
				<TriggerLabel>Resuming previous schedule</TriggerLabel>
				<ControlPageLabel>Resuming previous schedule</ControlPageLabel>
			</State>
			
			<State id="timerRunning">
				<ValueType>Boolean</ValueType>
				<TriggerLabel>Irrigation timer is running</TriggerLabel>
				<ControlPageLabel>Irrigation timer is running</ControlPageLabel>
			</State>
			
			<State id="sep2">
				<ValueType>Separator</ValueType>
			</State>
			
			<State id="currentZoneName">
				<ValueType>String</ValueType>
				<TriggerLabel>Name of currently running zone</TriggerLabel>
				<ControlPageLabel>Name of currently running zone</ControlPageLabel>
			</State>
			
			<State id="sep3">
				<ValueType>Separator</ValueType>
			</State>
			
			<State id="rainDetectTime">
				<ValueType>String</ValueType>
				<TriggerLabel>Time when rain condition was detected</TriggerLabel>
				<ControlPageLabel>Time when rain condition was detected</ControlPageLabel>
			</State>
			
			<State id="pauseDetectTime">
				<ValueType>String</ValueType>
				<TriggerLabel>Time when sprinklers were paused</TriggerLabel>
				<ControlPageLabel>Time when sprinklers were paused</ControlPageLabel>
			</State>
			
			<State id="quickPauseEndTime">
				<ValueType>String</ValueType>
				<TriggerLabel>Time when sprinklers will resume from quick pause</TriggerLabel>
				<ControlPageLabel>Time when sprinklers will resume from quick pause</ControlPageLabel>
			</State>
			
			<State id="hardStopTime">
				<ValueType>String</ValueType>
				<TriggerLabel>Time when rain condition stops irrigation</TriggerLabel>
				<ControlPageLabel>Time when rain condition stops irrigation</ControlPageLabel>
			</State>
			
			<State id="zoneEndTime">
				<ValueType>String</ValueType>
				<TriggerLabel>Time when zone will stop watering</TriggerLabel>
				<ControlPageLabel>Time when zone will stop watering</ControlPageLabel>
			</State>
			
			<State id="scheduleEndTime">
				<ValueType>String</ValueType>
				<TriggerLabel>Time when schedule will stop watering</TriggerLabel>
				<ControlPageLabel>Time when schedule will stop watering</ControlPageLabel>
			</State>
			
			<State id="sep4">
				<ValueType>Separator</ValueType>
			</State>
			
			<State id="zoneRunTimeRemaining">
				<ValueType>String</ValueType>
				<TriggerLabel>Current zone run time remaining</TriggerLabel>
				<ControlPageLabel>Current zone run time remaining</ControlPageLabel>
			</State>
			
			<State id="scheduleRunTimeRemaining">
				<ValueType>String</ValueType>
				<TriggerLabel>Current schedule run time remaining</TriggerLabel>
				<ControlPageLabel>Current schedule run time remaining</ControlPageLabel>
			</State>
			
			<State id="pauseTimeRemaining">
				<ValueType>String</ValueType>
				<TriggerLabel>Schedule paused time remaining until hard stop</TriggerLabel>
				<ControlPageLabel>Schedule paused time remaining until hard stop</ControlPageLabel>
			</State>
			
			<State id="sep5">
				<ValueType>Separator</ValueType>
			</State>
			
			<State id="zone1Schedule">
				<ValueType>Number</ValueType>
				<TriggerLabel>Zone 1 scheduled run time</TriggerLabel>
				<ControlPageLabel>Zone 1 scheduled run time</ControlPageLabel>
			</State>
			
			<State id="zone2Schedule">
				<ValueType>Number</ValueType>
				<TriggerLabel>Zone 2 scheduled run time</TriggerLabel>
				<ControlPageLabel>Zone 2 scheduled run time</ControlPageLabel>
			</State>
			
			<State id="zone3Schedule">
				<ValueType>Number</ValueType>
				<TriggerLabel>Zone 3 scheduled run time</TriggerLabel>
				<ControlPageLabel>Zone 3 scheduled run time</ControlPageLabel>
			</State>
			
			<State id="zone4Schedule">
				<ValueType>Number</ValueType>
				<TriggerLabel>Zone 4 scheduled run time</TriggerLabel>
				<ControlPageLabel>Zone 4 scheduled run time</ControlPageLabel>
			</State>
			
			<State id="zone5Schedule">
				<ValueType>Number</ValueType>
				<TriggerLabel>Zone 5 scheduled run time</TriggerLabel>
				<ControlPageLabel>Zone 5 scheduled run time</ControlPageLabel>
			</State>
			
			<State id="zone6Schedule">
				<ValueType>Number</ValueType>
				<TriggerLabel>Zone 6 scheduled run time</TriggerLabel>
				<ControlPageLabel>Zone 6 scheduled run time</ControlPageLabel>
			</State>
			
			<State id="zone7Schedule">
				<ValueType>Number</ValueType>
				<TriggerLabel>Zone 7 scheduled run time</TriggerLabel>
				<ControlPageLabel>Zone 7 scheduled run time</ControlPageLabel>
			</State>
			
			<State id="zone8Schedule">
				<ValueType>Number</ValueType>
				<TriggerLabel>Zone 8 scheduled run time</TriggerLabel>
				<ControlPageLabel>Zone 8 scheduled run time</ControlPageLabel>
			</State>
						
		</States>
		<UiDisplayStateId>statedisplay</UiDisplayStateId>
	</Device>
	
	<!-- =========== THERMOSTAT WRAPPER =========== -->
	<Device type="thermostat" id="thermostat-wrapper">
		<Name>Thermostat Wrapper</Name>
		<ConfigUI>
			<!-- Start Homebridge Buddy Integration Block -->		
			<Field type="checkbox" id="hbbIntegrated" defaultValue="false" hidden="false">
				<Label>Enable for HomeKit</Label>
				<Description>Integrate this device into Homebridge Buddy</Description>
				<CallbackMethod>hbbIntegrationFieldChange</CallbackMethod>
			</Field>
		
			<Field type="menu" id="hbbServer" defaultValue="1953136859" visibleBindingId="hbbIntegrated" visibleBindingValue="true" alwaysUseInDialogHeightCalc="true">
				<Label>Homebridge server:</Label>
				<List class="self" filter="" method="hbbIntegrationServerList" dynamicReload="true"/>
				<CallbackMethod>hbbIntegrationFieldChange</CallbackMethod>
			</Field>
			
			<Field type="menu" id="hbbTreatAs" defaultValue="none" visibleBindingId="hbbIntegrated" visibleBindingValue="true" alwaysUseInDialogHeightCalc="true">
				<Label>Homebridge device type:</Label>
				<List class="self" filter="" method="hbbIntegrationTreatAsList" dynamicReload="true"/>
				<CallbackMethod>hbbIntegrationFieldChange</CallbackMethod>
			</Field>
			
			<!-- not yet implemented in API but here for future proofing -->	
			<Field type="textfield" id="hbbAlias" defaultValue="" visibleBindingId="hbbIntegrated" visibleBindingValue="true" alwaysUseInDialogHeightCalc="true" hidden="true">
				<Label>Alias Name:</Label>
			</Field>
			
			<Field type="separator" id="sep_hbbConnector" visibleBindingId="hbbIntegrated" visibleBindingValue="true" alwaysUseInDialogHeightCalc="true"/>
			<!-- End Homebridge Buddy Integration Block -->
			
			<!-- Stock thermostat fields that Indigo will look for -->
			<Field type="menu" id="NumTemperatureInputs" defaultValue="1" hidden="true">
				<Label>Number of temperature sensors:</Label>
				<List>
					<Option value="0">None</Option>
					<Option value="1">1</Option>
					<Option value="2">2</Option>
					<Option value="3">3</Option>
				</List>
			</Field>
			<Field type="menu" id="NumHumidityInputs" defaultValue="0" hidden="true">
				<Label>Number of humidity sensors:</Label>
				<List>
					<Option value="0">None</Option>
					<Option value="1">1</Option>
					<Option value="2">2</Option>
					<Option value="3">3</Option>
				</List>
			</Field>
			<Field type="checkbox" id="SupportsHeatSetpoint" defaultValue="false" hidden="true">
				<Label>Supports heat setpoint:</Label>
				<Description>Show heat setpoint controls in UI</Description>
			</Field>
			<Field type="checkbox" id="SupportsCoolSetpoint" defaultValue="false" hidden="true">
				<Label>Supports cool setpoint:</Label>
				<Description>Show cool setpoint controls in UI</Description>
			</Field>
			<Field type="checkbox" id="SupportsHvacOperationMode" defaultValue="false" hidden="true">
				<Label>Supports thermostat modes:</Label>
				<Description>Show thermostat mode controls (heat/cool/auto) in UI</Description>
			</Field>
			<Field type="checkbox" id="SupportsHvacFanMode" defaultValue="false" hidden="true">
				<Label>Supports fan modes:</Label>
				<Description>Show fan mode controls (auto/always on) in UI</Description>
			</Field>
			<Field type="checkbox" id="ShowCoolHeatEquipmentStateUI" hidden="true">
				<Label>Supports compressor/furnace feedback:</Label>
				<Description>Show compressor/furnace states in UI</Description>
			</Field>
			
			<!-- End of stock fields -->
			
			<!-- Hidden field indicating which option values are being displayed so we can clear them as needed in code -->
			<Field id="loadedoption" type="textfield" defaultValue="" hidden="true">
				<Label>Displaying values for:</Label>
			</Field>
			
			<Field type="menu" id="optionSelect" defaultValue="temp" alwaysUseInDialogHeightCalc="true">
				<Label>Select configuration option:</Label>
				<List>
					<Option value="thermostat">Wrap a Thermostat</Option>
					<Option value="temp">Temperature Value</Option>
					<Option value="humidity">Humidity Value</Option>
					<Option value="heatsetpoint">Heat Set Point Value</Option>
					<Option value="coolsetpoint">Cool Set Point Value</Option>
					<Option value="increaseheat">Increase Heat Set Point</Option>
					<Option value="decreaseheat">Decrease Heat Set Point</Option>
					<Option value="increasecool">Increase Cool Set Point</Option>
					<Option value="decreasecool">Decrease Cool Set Point</Option>
					<Option value="hvacmodeoff">Set HVAC Mode to Off</Option>
					<Option value="hvacmodeheat">Set HVAC Mode to Heat</Option>
					<Option value="hvacmodecool">Set HVAC Mode to Cool</Option>
					<Option value="hvacmodeauto">Set HVAC Mode to Auto</Option>
					<Option value="hvacmodeprogramheat">Set HVAC Mode to Program Heat</Option>
					<Option value="hvacmodeprogramcool">Set HVAC Mode to Program Cool</Option>
					<Option value="hvacmodeprogramauto">Set HVAC Mode to Program Auto</Option>
					<Option value="hvacfanmodeauto">Set HVAC Fan Mode to Auto</Option>
					<Option value="hvacfanmodealways">Set HVAC Fan Mode to Always On</Option>
				</List>
				<CallbackMethod>formFieldChanged</CallbackMethod>
			</Field>
			
			<Field type="menu" id="temperatureType" defaultValue="F" visibleBindingId="optionSelect" visibleBindingValue="temp,heatsetpoint,coolsetpoint" alwaysUseInDialogHeightCalc="true">
				<Label>Display temperature as:</Label>
				<List>
					<Option value="F">Fahrenheit</Option>
					<Option value="C">Celsius</Option>
				</List>
				<CallbackMethod>formFieldChanged</CallbackMethod>
			</Field>
			
			<Field type="label" id="lbl_thermostat_device" visibleBindingId="optionSelect" visibleBindingValue="thermostat" alwaysUseInDialogHeightCalc="true">
				<Label>
			   Selecting another thermostat here indicates that you want
			   all features and functions of this device to mirror that one
			   unless specifically indicated otherwise.
		</Label>
			</Field>
			
			<Field type="checkbox" id="unlockObject" defaultValue="false" hidden="true">
				<Label> </Label>
				<Description>Determines if object is editable or not, put here to keep things under control while in development</Description>
			</Field>
			
			<Field type="menu" id="option1Type" defaultValue="device" enabledBindingId="unlockObject" alwaysUseInDialogHeightCalc="true" >
				<Label>Object:</Label>
				<List>
					<Option value="thermostat">Thermostat</Option>
					<Option value="device">Device</Option>
					<Option value="action">Action Group</Option>
				</List>
				<CallbackMethod>formFieldChanged</CallbackMethod>
			</Field>
			
			<Field type="label" id="lbl_temperature_device" visibleBindingId="option1Type" visibleBindingValue="device" >
				<Label>
				   Select the device property that will be shown as the 
				   value.  This property must always have a number value.
		</Label>
			</Field>
			
			<Field type="menu" id="thermostatdevice" defaultValue="device" visibleBindingId="optionSelect" visibleBindingValue="thermostat" >
				<Label>Thermostat:</Label>
				<List class="indigo.devices" filter="indigo.thermostat"/>
				<CallbackMethod>formFieldChanged</CallbackMethod>
			</Field>
			
			<Field type="menu" id="option1Device" visibleBindingId="option1Type" visibleBindingValue="device" alwaysUseInDialogHeightCalc="true">
				<Label>Device:</Label>
				<List class="indigo.devices" />
				<CallbackMethod>formFieldChanged</CallbackMethod>
			</Field>
			
			<Field type="menu" id="option1State" defaultValue="on" visibleBindingId="option1Type" visibleBindingValue="device" alwaysUseInDialogHeightCalc="true">
				<Label>State:</Label>
				<List class="self" filter="#devicestates#[index=option1State, srcfield=option1Device, allowui=True]" method="getCustomList" dynamicReload="true"/>
				<CallbackMethod>formFieldChanged</CallbackMethod>
			</Field>
			
			<Field type="menu" id="option1Action" visibleBindingId="option1Type" visibleBindingValue="action">
				<Label>Action group:</Label>
				<List class="indigo.actionGroups" />
				<CallbackMethod>formFieldChanged</CallbackMethod>
			</Field>
			
			<Field type="menu" id="option1Variable" visibleBindingId="option1Type" visibleBindingValue="variable">
				<Label>Variable:</Label>
				<List class="indigo.variables" />
				<CallbackMethod>formFieldChanged</CallbackMethod>
			</Field>
			
			<Field type="label" id="lbl_button_whitespace" >
				<Label>
				   
		</Label>
			</Field>
			
			<Field type="button" id="clear"  >
				<Label> 
				</Label>
				<Title>Clear Option Settings </Title>
				<CallbackMethod>btnClearThermostatOption</CallbackMethod>
			</Field>
			
			<Field type="separator" id="sep_devicedef" />
			
			<Field type="menu" id="icon" defaultValue="Auto" >
				<Label>Icon when idle:</Label>
				<List class="self" filter="#stateicons#[index=icon, excludeself=true]" method="getCustomList" dynamicReload="true"/>
				<CallbackMethod>formFieldChanged</CallbackMethod>
			</Field>
			
			
			
		</ConfigUI>
		
		<States>
			<State id="statedisplay">
				<ValueType>String</ValueType>
				<TriggerLabel>Current device state</TriggerLabel>
				<ControlPageLabel>Current device state</ControlPageLabel>
			</State>
			
			<State id="sep1">
				<ValueType>Separator</ValueType>
			</State>
		</States>
		<UiDisplayStateId>statedisplay</UiDisplayStateId>
	</Device>	

</Devices>
